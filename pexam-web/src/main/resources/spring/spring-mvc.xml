<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
        ">
    <!-- 扫描controller（controller层注入） -->
    <context:component-scan base-package="cn.lsp.pexam.web"/>
    <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
    <context:annotation-config />
    <!-- 指定自己定义的validator -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <beans:ref bean="fastJsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:resources mapping="/js/**" location="WEB-INF/js/"/>
    <mvc:resources mapping="/css/**" location="WEB-INF/css/"/>
    <mvc:resources mapping="/images/**" location="WEB-INF/images/"/>
    <mvc:resources mapping="/common/**" location="WEB-INF/common/"/>

    <!-- 支持返回json(避免IE在ajax请求时，返回json出现下载 ) -->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath"  value="/WEB-INF/views/" /><!-- 設置模板位置-->
        <property name="velocityProperties">
            <props>
                <prop key="directive.foreach.counter.name">loopCounter</prop>
                <prop key="directive.foreach.counter.initial.value">0</prop>
                <prop key="input.encoding">UTF-8</prop><!-- 指定模板引擎进行模板处理的编码 -->
                <prop key="output.encoding">UTF-8</prop><!-- 指定输出流的编码 -->
            </props>
        </property>
    </bean>

    <!-- 对模型视图添加前后缀 -->
    <bean id="ViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="true" />
        <property name="prefix" value="/" /><!-- 视图文件的前缀，即存放的路径 -->
        <property name="suffix" value=".vm" /><!-- 视图文件的后缀名 -->
        <!--<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />&lt;!&ndash; toolbox配置文件路径 &ndash;&gt;-->
        <property name="viewClass" value="com.lanniuh.rental.web.velocity.MyVelocityToolboxView" />
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->
        <property name="requestContextAttribute" value="rc"/><!--request属性引用名称-->
    </bean>

    <!-- 配置springMVC处理上传文件的信息 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <!--全局异常拦截解析器-->
    <!--<beans:bean id="hugExceptionResolver" class="cn.lsp.pexam.utils.ExceptionResolver">-->
        <!--<beans:property name="messageConverter" ref="fastJsonHttpMessageConverter"/>-->
    <!--</beans:bean>-->

    <!-- 定时器配置
    task:executor/@pool-size：可以指定执行线程池的初始大小、最大大小
    task:executor/@queue-capacity：等待执行的任务队列的容量
   -->
    <task:scheduler id="scheduler" pool-size="10"/>
    <task:executor id="executor" pool-size="10-30" queue-capacity="200"/>
    <task:annotation-driven executor="executor" scheduler="scheduler"/>

</beans>
